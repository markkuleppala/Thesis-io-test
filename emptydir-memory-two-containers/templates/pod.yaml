apiVersion: v1
kind: Pod
metadata:
  name: "fio-{{ .Values.rtc }}-emptydir-memory-two-containers"
  namespace: io-test
spec:
  {{- if ne .Values.rtc "runc" }}
  runtimeClassName: "kata-{{ .Values.rtc }}"
  {{- end }}
  containers:
  - name: fio-first
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    volumeMounts:
    - name: shared-volume
      mountPath: /test-volume
    - name: result-volume
      mountPath: /results
    env:
    - name: RTC
      value: "{{ .Values.rtc }}"
    - name: VOLUME
      value: emptydir-disk
    resources:
      requests:
        cpu: "{{ .Values.resources.requests.cpu }}"
        memory: "{{ .Values.resources.requests.memory }}"
      limits:
        cpu: "{{ .Values.resources.limits.cpu }}"
        memory: "{{ .Values.resources.limits.memory }}"
  - name: fio-second
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    volumeMounts:
    - name: shared-volume
      mountPath: /test-volume
    - name: result-volume
      mountPath: /results
    env:
    - name: RTC
      value: "{{ .Values.rtc }}"
    - name: VOLUME
      value: emptydir-disk
    resources:
      requests:
        cpu: "{{ .Values.resources.requests.cpu }}"
        memory: "{{ .Values.resources.requests.memory }}"
      limits:
        cpu: "{{ .Values.resources.limits.cpu }}"
        memory: "{{ .Values.resources.limits.memory }}"
  volumes:
  - name: shared-volume
    emptyDir: {}
      medium: Memory
      sizeLimit: "8Gi"
  - name: result-volume
    hostPath:
      path: /root/results
      type: DirectoryOrCreate
